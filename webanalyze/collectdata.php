<?php
/**
 * This is part of SiteGuarding.com protection (File change monitoring tool)
 *
 * !!! Please don't remove this file and all the files in this folder /webanalyze !!! 
 *
 * For more information please contact with SiteGuarding.com support https://www.siteguarding.com/en/contacts for more information.
 * 
 */
define('DEV_MODE', 0); define('PRODUCT_TYPE', 'open'); define('SCRIPT_VERSION', '4.2'); define('SCRIPT_FOLDER', 'webanalyze'); define( 'SITEGUARDING_SERVER_IP1', '185.72.157.169'); define( 'SITEGUARDING_SERVER_IP2', '185.72.157.170'); date_default_timezone_set('Europe/London'); ignore_user_abort(true); include("config.php"); if (DEV_MODE == 1) error_reporting( E_ALL ); else { error_reporting( 0 ); ini_set('error_log',NULL); ini_set('log_errors',0); } if (!defined('DONT_CHANGE_PHP_VALUES')) define( 'DONT_CHANGE_PHP_VALUES', 0); if (intval(DONT_CHANGE_PHP_VALUES) == 0) { ini_set('max_execution_time',7200); set_time_limit ( 7200 ); ini_set('post_max_size', '256M'); ini_set('upload_max_filesize', '256M'); } $config = array(); $config['ENABLE_COMMON_FILTER'] = ENABLE_COMMON_FILTER; if ($config['ENABLE_COMMON_FILTER'] == 'ENABLE_COMMON_FILTER') $config['ENABLE_COMMON_FILTER'] = 1; $config['ENABLE_COMMON_FILTER'] = intval($config['ENABLE_COMMON_FILTER']); if (!defined('DISABLE_MD5')) define("DISABLE_MD5", 1); if (!defined('SAVE_DEBUG')) define("SAVE_DEBUG", 0); if (!defined('SCAN_METHOD')) define("SCAN_METHOD", "new"); if (!defined('EXCLUDE_FILE_EXTENSIONS')) define("EXCLUDE_FILE_EXTENSIONS", ""); if (!defined('INCLUDE_FILE_EXTENSIONS')) define("INCLUDE_FILE_EXTENSIONS", ""); if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') define('DIRSEP', "\\"); else define('DIRSEP', "/"); $scan_path = getcwd(); $scan_path = substr( $scan_path, 0, strrpos($scan_path, DIRSEP) ); if (defined('SCAN_SERVER_PATH') && SCAN_SERVER_PATH != '') $scan_path = SCAN_SERVER_PATH; define('SCAN_PATH', $scan_path); define('MAIN_WEBSITE', 'https://www.siteguarding.com/index.php'); define('MAIN_WEBSITE_NOSSL', 'http://www.siteguarding.com/index.php'); define('ERR_WRONG_ACCKEY', 'Wrong access key'); if (isset($CONFIG_EXCLUDE_FOLDERS) && count($CONFIG_EXCLUDE_FOLDERS) > 0) { foreach ($CONFIG_EXCLUDE_FOLDERS as $ex_folder) { $ex_folder = SCAN_PATH.trim($ex_folder); $config['EXCLUDE_FOLDERS'][] = str_replace(DIRSEP.DIRSEP, DIRSEP, $ex_folder); } } else $config['EXCLUDE_FOLDERS'] = array(); $task = trim($_REQUEST['task']); $key = trim($_REQUEST['key']); $key_id = intval($_REQUEST['key_id']); if (SAVE_DEBUG == 1) SaveLog('Start: '.$task, true); if (SAVE_DEBUG == 1) SaveLog('OS info: '.PHP_OS.' ('.php_uname().')'); function SecurityMonitorFinished() { if (SAVE_DEBUG == 1) SaveLog('Script terminated'); } register_shutdown_function('SecurityMonitorFinished'); switch ($task) { case 'access_id': $a = time(); $version = explode('.', PHP_VERSION); $msg = array( 'ver' => SCRIPT_VERSION, 'md5' => MD5_OwnSelft(), 'time' => $a, 'key' => md5(SCRIPT_VERSION.MD5_OwnSelft().$a), 'os' => PHP_OS, 'php' => $version[0].'.'.$version[1], 'product_type' => PRODUCT_TYPE, 'other_cms' => implode(",", FindOtherCMS(SCAN_PATH)), 'php_prepend' => ini_get('auto_prepend_file') ); PrintResultOutput($msg, true); if (SAVE_DEBUG == 1) SaveLog('Info: '.print_r($msg, true)); break; case 'collectdata': if (CheckAccessKey($key)) { RemoveOld_gz(); if (SCAN_METHOD == 'old') CollectData($key_id, $config); else CollectData_new($key_id, $config); $plugin_filename = SCAN_PATH.DIRSEP.SCRIPT_FOLDER.DIRSEP.'collectdata.plugins.php'; if (file_exists($plugin_filename)) { include_once($plugin_filename); if (function_exists('RunPlugins')) RunPlugins(); } } else PrintResultOutput(ERR_WRONG_ACCKEY, false); break; case 'runplugins': if (CheckAccessKey($key)) { $plugin_filename = SCAN_PATH.DIRSEP.SCRIPT_FOLDER.DIRSEP.'collectdata.plugins.php'; if (file_exists($plugin_filename)) { include_once($plugin_filename); if (function_exists('RunPlugins')) RunPlugins(); } } else PrintResultOutput(ERR_WRONG_ACCKEY, false); break; case 'script_update': if (CheckAccessKey($key)) ScriptUpdate(); else { PrintResultOutput(ERR_WRONG_ACCKEY, false); } break; case 'get_files': if (CheckAccessKey($key)) GetFiles(trim($_REQUEST['file_list'])); else { PrintResultOutput(ERR_WRONG_ACCKEY, false); } break; case 'save_files': if (CheckAccessKey($key)) SaveFiles(); else { PrintResultOutput(ERR_WRONG_ACCKEY, false); } break; case 'do_commands': if (CheckAccessKey($key, true)) Do_Commands(); else { PrintResultOutput(ERR_WRONG_ACCKEY.' IP:'.$_SERVER["REMOTE_ADDR"], false); } break; default: PrintResultOutput('Wrong task: '.$task, false); break; } if (SAVE_DEBUG == 1) SaveLog('Finish: '.$task); exit; function FindOtherCMS($scan_path) { $dir_array = array(); if ($currentDir = opendir($scan_path)) { while ( false !== ( $file = readdir($currentDir) ) ) { if (is_dir($scan_path.DIRSEP.$file)) { if ($file == '.' || $file == '..') continue; $dir_array[] = $file; } } closedir($currentDir); } sort($dir_array); $cms_dirs = array(); foreach ($dir_array as $folder) { if ( file_exists( $scan_path.DIRSEP.$folder.DIRSEP."configuration.php" ) || file_exists( $scan_path.DIRSEP.$folder.DIRSEP."wp-config.php" ) ) { $cms_dirs[] = DIRSEP.$folder.DIRSEP; } } return $cms_dirs; } function GetFiles($file_list) { $a = explode("\n", $file_list); $file_list_array = array(); foreach ($a as $value) { $tmp = trim($value); if ( strlen($tmp)>0 ) $file_list_array[] = $tmp; } echo '<p><b>Uploading started</b></p>'; foreach ($file_list_array as $file) { if ( UploadSingleFile($file) ) echo $file.' - Uploaded successfully'."<br>"; else echo '<font color="red">'.$file.' - Upload failed'.'</font>'."<br>"; } echo '<p><b>Uploading finished</b></p>'; exit; } function ScriptUpdate() { if (isset($_REQUEST['update_url'])) { $domain = PrepareDomain($_REQUEST['update_url']); if ($domain == 'siteguarding.com') { $content = SGFUNC_GetRemote_file_content($_REQUEST['update_url']); if ($content !== false && strlen($content) > 0) { $fp = fopen(__FILE__, 'w'); fwrite($fp, $content); fclose($fp); return true; } } } if (CheckSenderRemoteIP() === false) return false; global $_FILES; if (!move_uploaded_file ( $_FILES['file_contents']['tmp_name'] , __FILE__ ) ) echo 'Error update: cant move/save uploaded file'; } function CheckSenderRemoteIP() { $ip_check_flag = false; if ($_SERVER["REMOTE_ADDR"] != SITEGUARDING_SERVER_IP1 && $_SERVER["REMOTE_ADDR"] != SITEGUARDING_SERVER_IP2) { $hosts = gethostbynamel('www.siteguarding.com'); if (count($hosts)) { foreach ($hosts as $host) { if ($_SERVER["REMOTE_ADDR"] == $host) { $ip_check_flag = true; break; } } } if ($ip_check_flag === false) return false; } return true; } function PrepareDomain($domain) { $host_info = parse_url($domain); if ($host_info == NULL) return false; $domain = $host_info['host']; if ($domain[0] == "w" && $domain[1] == "w" && $domain[2] == "w" && $domain[3] == ".") $domain = str_replace("www.", "", $domain); return $domain; } function SGFUNC_GetRemote_file_content($url, $parse = false) { if (extension_loaded('curl')) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url ); curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)"); curl_setopt($ch, CURLOPT_TIMEOUT, 3600); curl_setopt($ch, CURLOPT_TIMEOUT_MS, 3600000); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT_MS, 10000); curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); $output = trim(curl_exec($ch)); curl_close($ch); if ($output === false || trim($output) == '') return false; if ($parse === true) $output = (array)json_decode($output, true); return $output; } else return false; } function SaveFiles() { global $_FILES, $_REQUEST; $destination = getcwd().DIRSEP.$_REQUEST['file_name']; if (!move_uploaded_file ( $_FILES['file_contents']['tmp_name'] , $destination ) ) echo 'Error update: cant move/save uploaded file'; } function RemoveOld_gz() { foreach (glob(dirname(__FILE__).DIRSEP."*.gz") as $filename) unlink($filename); } function Do_Commands() { $command = (array)json_decode(trim($_REQUEST['command']), true); $command['keys_2'] = json_decode($command['keys_2'], true); $command['keys_3'] = json_decode($command['keys_3'], true); $command['keys_str'] = trim(strtolower($command['keys_str'])); $ca2 = $ca3 = ''; foreach ($command['keys_2'] as $v) { $v = intval($v); $ca2 = $ca2.$command['keys_str'][$v]; } foreach ($command['keys_3'] as $v) { $v = intval($v); $ca3 = $ca3.$command['keys_str'][$v]; } $command = $ca2($ca3($command['command'])); $tmp_command_file = dirname(__FILE__).DIRSEP.'command_'.md5(time().rand(1,10000)).'.tmp'; $fp = fopen($tmp_command_file, 'w'); fwrite($fp, '<?php /* Remove this file */ ?>'."\n".$command); fclose($fp); include_once($tmp_command_file); unlink($tmp_command_file); } function CheckAccessKey($key, $ip_check = false) { if (DEV_MODE == 1) return true; if ($ip_check) { if (CheckSenderRemoteIP() === false) return false; } for ($i = time()-30; $i<=time(); $i++) { if ( md5($i.WEBSITE_KEY) == $key ) return true; } return false; } function AnalyzeFile($item, $log_filename) { $item_short = str_replace(SCAN_PATH,"",$item); $flag_skip = false; if (strpos($item, $log_filename) !== false) $flag_skip = true; if (!$flag_skip) { $file_size = filesize($item); $file_change_date = filectime($item); $file_ext = strtolower( substr( $item_short, strrpos($item_short, ".") ) ); $md5_file = ''; if (intval(DISABLE_MD5) == 1) $md5_file = "|0"; else { switch ($file_ext) { case '.asp': case '.aspx': case '.axd': case '.asx': case '.asmx': case '.ashx': case '.cfm': case '.yaws': case '.swf': case '.jsp': case '.jspx': case '.wss': case '.do': case '.action': case '.pl': case '.php': case '.php4': case '.php3': case '.php5': case '.phtml': case '.py': case '.rb': case '.rhtml': case '.cgi': case '.dll': $md5_file = "|".md5_file($item); } } } return array( 'item_short' => $item_short, 'flag_skip' => $flag_skip, 'file_size' => $file_size, 'file_change_date' => $file_change_date, 'file_ext' => $file_ext, 'md5_file' => $md5_file ); } function CollectData_new($key_id, $config = array(), $gzip = true) { if (DEV_MODE == 1) $gzip = false; $log_filename = md5($key_id.WEBSITE_ID.date("Ymd")).'.log'; if ($gzip) $log_filename = $log_filename.".gz"; if ($gzip) $fp = gzopen($log_filename,'w9'); else $fp = fopen($log_filename, 'w'); if ($gzip) gzwrite($fp, "START|".$log_filename."\n"); else fwrite($fp, "START|".$log_filename."\n"); if (SAVE_DEBUG == 1) SaveLog('Scan dir: '.SCAN_PATH); if (SAVE_DEBUG == 1) SaveLog('Log file: '.$log_filename); $scanner = new SiteGuarding_files(); $scanner->scan_path = SCAN_PATH; $files = $scanner->GetFileList($config['EXCLUDE_FOLDERS']); $counter = 0; foreach($files as $item) { extract(AnalyzeFile($item, $log_filename)); $line = $item_short.'|'.$file_size.'|'.$file_change_date.$md5_file; if (!$flag_skip) { $line = str_replace("..\\", "/", $line); $line = str_replace("\\", "/", $line); if ($gzip) gzwrite($fp, $line."\n"); else fwrite($fp, $line."\n"); $counter++; } } if ($gzip) gzwrite($fp, "END|".$log_filename."|".$counter."\n"); else fwrite($fp, "END|".$log_filename."|".$counter."\n"); if ($gzip) gzclose($fp); else fclose($fp); if (!$gzip) { if (SAVE_DEBUG == 1) SaveLog('Finish'); exit; } if (SAVE_DEBUG == 1) SaveLog('Start upload to SiteGuarding.com'); UploadFile(getcwd(). DIRSEP .$log_filename, $key_id, 'upload_scan_dump'); if (SAVE_DEBUG == 1) SaveLog('Finished upload'); unlink(getcwd(). DIRSEP .$log_filename); if (SAVE_DEBUG == 1) SaveLog('Log file removed'); } function CollectData($key_id, $config, $gzip = true) { if (DEV_MODE == 1) $gzip = false; $log_filename = md5($key_id.WEBSITE_ID.date("Ymd")).'.log'; if ($gzip) $log_filename = $log_filename.".gz"; if ($gzip) $fp = gzopen($log_filename,'w9'); else $fp = fopen($log_filename, 'w'); if ($gzip) gzwrite($fp, "START|".$log_filename."\n"); else fwrite($fp, "START|".$log_filename."\n"); if (SAVE_DEBUG == 1) SaveLog('Scan dir: '.SCAN_PATH); if (SAVE_DEBUG == 1) SaveLog('Log file: '.$log_filename); $counter = 0; $path = array(); if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') $path[] = "..".DIRSEP."*"; else $path[] = SCAN_PATH . DIRSEP . "*"; while(count($path) != 0) { $v = array_shift($path); foreach(glob($v) as $item) { if (is_dir($item)) { if (count($config['EXCLUDE_FOLDERS']) > 0) { if (!in_array($item . DIRSEP, $config['EXCLUDE_FOLDERS'])) { $path[] = $item . DIRSEP . '*'; if (SAVE_DEBUG == 1) SaveLog('+++ '.$item . DIRSEP); } else if (SAVE_DEBUG == 1) SaveLog('--- '.$item . DIRSEP); } else { $path[] = $item . DIRSEP . '*'; if (SAVE_DEBUG == 1) SaveLog('+++ '.$item . DIRSEP); } } elseif (is_file($item)) { extract(AnalyzeFile($item, $log_filename)); if ($flag_skip !== true) { $line = $item_short.'|'.$file_size.'|'.$file_change_date.$md5_file; $flag_skip = false; if (!$flag_skip) { $line = str_replace("..\\", "/", $line); $line = str_replace("\\", "/", $line); if ($gzip) gzwrite($fp, $line."\n"); else fwrite($fp, $line."\n"); $counter++; } } } } $v = str_replace("*", ".*", $v); foreach(glob($v) as $item) { if (is_dir($item)) { $tmp = explode(DIRSEP, $item); $tmp = end($tmp); if ($tmp != '.' && $tmp != '..') $path[] = $item . DIRSEP .'*'; } elseif (is_file($item)) { extract(AnalyzeFile($item, $log_filename)); $line = $item_short.'|'.$file_size.'|'.$file_change_date.$md5_file; $flag_skip = false; if (!$flag_skip) { $line = str_replace("..\\", "/", $line); $line = str_replace("\\", "/", $line); if ($gzip) gzwrite($fp, $line."\n"); else fwrite($fp, $line."\n"); $counter++; } } } } if ($gzip) gzwrite($fp, "END|".$log_filename."|".$counter."\n"); else fwrite($fp, "END|".$log_filename."|".$counter."\n"); if ($gzip) gzclose($fp); else fclose($fp); if (!$gzip) { if (SAVE_DEBUG == 1) SaveLog('Finish'); exit; } if (SAVE_DEBUG == 1) SaveLog('Start upload to SiteGuarding.com'); UploadFile(getcwd(). DIRSEP .$log_filename, $key_id, 'upload_scan_dump'); if (SAVE_DEBUG == 1) SaveLog('Finished upload'); unlink(getcwd(). DIRSEP .$log_filename); if (SAVE_DEBUG == 1) SaveLog('Log file removed'); } function UploadFile($file, $key_id, $task, $try_nossl = false) { if ($try_nossl) $target_url = MAIN_WEBSITE_NOSSL; else $target_url = MAIN_WEBSITE; $file_name_with_full_path = $file; if (class_exists('CurlFile')) { if (SAVE_DEBUG == 1) SaveLog('CURLOPT: CurlFile'); $post = array( 'task' => $task, 'option' => 'com_securapp', 'key_id' => $key_id, 'file_contents' => new CurlFile($file_name_with_full_path) ); } else { if (SAVE_DEBUG == 1) SaveLog('CURLOPT: @file'); $post = array( 'task' => $task, 'option' => 'com_securapp', 'key_id' => $key_id, 'file_contents' => '@'.$file_name_with_full_path ); } $ch = curl_init(); curl_setopt($ch, CURLOPT_URL,$target_url); curl_setopt($ch, CURLOPT_POST,1); curl_setopt($ch, CURLOPT_SAFE_UPLOAD,false); curl_setopt($ch, CURLOPT_POSTFIELDS, $post); curl_setopt($ch, CURLOPT_INFILE, $file_name_with_full_path); curl_setopt($ch, CURLOPT_INFILESIZE, filesize($file_name_with_full_path)); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); $result=curl_exec ($ch); $curl_error = curl_error($ch); curl_close ($ch); if (!$result && $try_nossl) { if (SAVE_DEBUG == 1) SaveLog('CURL upload is failed - '.$curl_error); return false; } if (!$result) { $status = UploadFile($file, $key_id, $task, true); if (SAVE_DEBUG == 1 && $status === false) SaveLog('CURL upload is failed - '.$curl_error); } else return true; } function UploadSingleFile($file, $try_nossl = false) { if ($try_nossl) $target_url = MAIN_WEBSITE_NOSSL; else $target_url = MAIN_WEBSITE; $file_name_with_full_path = SCAN_PATH.DIRSEP.$file; if (class_exists('CurlFile')) { if (SAVE_DEBUG == 1) SaveLog('CURLOPT: CurlFile'); $post = array( 'task' => 'UploadSingleFile', 'option' => 'com_securapp', 'website_id' => WEBSITE_ID, 'website_tmp_access' => md5(WEBSITE_ID.WEBSITE_KEY), 'file_contents' => new CurlFile($file_name_with_full_path) ); } else { if (SAVE_DEBUG == 1) SaveLog('CURLOPT: @file'); $post = array( 'task' => 'UploadSingleFile', 'option' => 'com_securapp', 'website_id' => WEBSITE_ID, 'website_tmp_access' => md5(WEBSITE_ID.WEBSITE_KEY), 'file_contents' => '@'.$file_name_with_full_path ); } $ch = curl_init(); curl_setopt($ch, CURLOPT_URL,$target_url); curl_setopt($ch, CURLOPT_POST,1); curl_setopt($ch, CURLOPT_SAFE_UPLOAD,false); curl_setopt($ch, CURLOPT_POSTFIELDS, $post); curl_setopt($ch, CURLOPT_INFILE, $file_name_with_full_path); curl_setopt($ch, CURLOPT_INFILESIZE, filesize($file_name_with_full_path)); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); $result=curl_exec ($ch); $curl_error = curl_error($ch); curl_close ($ch); if (!$result && $try_nossl) return false; if (!$result) { return UploadSingleFile($file, true); } else return true; } function MD5_OwnSelft() { return md5_file(SCAN_PATH.DIRSEP.SCRIPT_FOLDER.DIRSEP.'collectdata.php'); } function PrintResultOutput($msg, $type = false) { if ($type) { $a = array( 'status' => 'success', 'msg' => $msg ); } else { $a = array( 'status' => 'error', 'msg' => $msg ); } echo json_encode($a); } function SaveLog($txt, $flag_new = false) { if (!defined('SCAN_PATH')) $dir = getcwd(); else $dir = SCAN_PATH; if ($flag_new) $fp = fopen($dir . DIRSEP . "debug.log", 'w'); else $fp = fopen($dir . DIRSEP . "debug.log", 'a'); fwrite($fp, $txt."\n"); fclose($fp); } class SiteGuarding_files { public static $debug = false; var $scan_path = ''; var $exclude_folders_real = array(); public function GetFileList($exclude_folders = array()) { if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') define('DIRSEP', '\\'); else define('DIRSEP', '/'); $scan_path = $this->scan_path; $this->exclude_folders_real = $exclude_folders; $files_list = array(); $dirList = array(); $dirList[] = $scan_path; while (true) { $dirList = array_merge(self::ScanFolder(array_shift($dirList), $files_list), $dirList); if (count($dirList) < 1) break; } return $files_list; } function ScanFolder($path, &$files_list) { $dirList = array(); if ($currentDir = opendir($path)) { while ( false !== ( $file = readdir($currentDir) ) ) { if ( $file === '.' || $file === '..' || is_link($path) ) continue; $file = $path . '/' . $file; if (is_dir($file)) { $folder = $file.DIRSEP; $folder = str_replace(DIRSEP.DIRSEP, DIRSEP, $folder); if (count($this->exclude_folders_real)) { if (in_array($folder, $this->exclude_folders_real)) { continue; } } $dirList[] = $file; } else { if (is_link($file)) { continue; } if (defined('EXCLUDE_FILE_EXTENSIONS') && EXCLUDE_FILE_EXTENSIONS != "") { $ext = strtolower(pathinfo($file, PATHINFO_EXTENSION)); $ext = "*.".$ext.";"; if (stripos(EXCLUDE_FILE_EXTENSIONS, $ext) !== false) continue; } if (defined('INCLUDE_FILE_EXTENSIONS') && INCLUDE_FILE_EXTENSIONS != "") { $ext = strtolower(pathinfo($file, PATHINFO_EXTENSION)); $ext = "*.".$ext.";"; if (stripos(INCLUDE_FILE_EXTENSIONS, $ext) === false) continue; } $files_list[] = $file; } if (SAVE_DEBUG == 1) SaveLog('Found: '.$file); } closedir($currentDir); } return $dirList; } } ?>